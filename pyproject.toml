[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "eitprocessing"
version = "1.0.1"
description = "Processing of lung image data from electrical impedance tomography."
readme = "README.md"
requires-python = ">=3.10"
keywords = [
    "Mechanical lung ventilation",
    "Electrical impedance tomography",
    "Image/data processing",
    "Advanced respiratory care",
]
authors = [
    { name = "Dani Bodor", email = "d.bodor@esciencecenter.nl" },
    { name = "Peter Somhorst", email = "p.somhorst@erasmusmc.nl" },
    { name = "Walter Baccinelli", email = "w.baccinelli@esciencecenter.nl" },
]
license = { text = "Apache-2.0 license" }
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "matplotlib >= 3.7.1",
    "numpy >= 1.24.2",
    "scipy >= 1.10.1",
    "tqdm >= 4.65.0",
    "strenum >= 0.4.10",
    "ruff >= 0.3",
]

[project.optional-dependencies]
# development dependency groups
dev = [
    "pytest >= 7.4.0",
    "bump2version",
    "coverage",
    "pycodestyle",
    "pytest-cov",
    "pytest-runner",
    "coveralls",
    "sphinx",
    "sphinx_rtd_theme",
    "sphinx-autoapi",
    "tox",
    "myst_parser",
]
notebooks = [
    "ipykernel >= 6.15.2",
    "ipython >= 8.4.0",
    "jupyter >= 1.0.0",
    "jupytext >= 1.14.5",
    "notebook >= 6.4.12",
]
publishing = ["build", "twine", "wheel"]

[project.urls]
Documentation = "https://github.com/EIT-ALIVE/eitprocessing/blob/main/README.md"
Repository = "https://github.com/EIT-ALIVE/eitprocessing/"
Changelog = "https://github.com/EIT-ALIVE/eitprocessing/blob/main/CHANGELOG.md"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["eitprocessing"]
command_line = "-m pytest"

[tool.setuptools.packages.find]
include = ["eitprocessing*", "eitprocessing.*"]
exclude = ["tests*", "*tests.*", "*tests"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37,py38,py39,py310,py311
skip_missing_interpreters = true
[testenv]
commands = pytest
extras = dev
"""

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # Unwanted (potentially)
    "FBT",    # Using boolean arguments
    "ANN002", # Missing type annotation for `*args`
    "ANN003", # Missing type annotation for `**kwargs`
    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotation for `cls` in classmethod
    "ANN204", # Missing return type annotation for special (dunder) method
    "S105",   # Possible hardcoded password
    "S311",   # insecure random generators
    "PT011",  # pytest-raises-too-broad
    "PD011",  # Use of .values. Assumes .values refers to pandas dataframes, not object attributes
    "TD",     # TODOs
    "FIX002", # Resolve TODOs
    "B028",   # No explicit `stacklevel` keyword argument found in warning
    # "SIM108", # Use ternary operator (not sure if we want to ignore this)
    # Unneeded docstrings
    "D100", # Missing module docstring
    "D104", # Missing public package docstring
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in `__init__`
    # Rules irrelevant to the Google style
    "D203", # 1 blank line required before class docstring
    "D204",
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D215",
    "D400",
    "D401",
    "D404", # First word of the docstring should not be This
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
]

# Set autofixing.
fixable = ["ALL"]
unfixable = [
    "F401",   # unused imports (should not disappear while editing)
    "RUF100", # unused noqa (should not disappear while editing)
    "B905",   # autofill strictness of zip (think about preferred behavior)
]
extend-safe-fixes = [
    "D415",   # First line should end with a period, question mark, or exclamation point
    "D300",   # Use triple double quotes `"""`
    "D200",   # One-line docstring should fit on one line
    "TCH",    # Format type checking only imports
    "ISC001", # Implicitly concatenated strings on a single line
    "EM",     # Exception message variables
    "RUF013", # Implicit Optional
    "B006",   # Mutable default argument
    "TID252", # Absolute imports over relative imports
]

# Override default settings for specific rules
pylint.max-args = 9
flake8-tidy-imports.ban-relative-imports = "all" # Disallow all relative imports.
isort.known-first-party = ["eitprocessing"]

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = ["ERA001"] # Commented out code
"tests/*" = [
    "S101",    # Use of `assert` detected
    "ANN201",  # Missing return type
    "D103",    # Missing function docstring
    "PLR2004", # Comparison against unnamed value
]
"docs/*" = ["ALL"]
