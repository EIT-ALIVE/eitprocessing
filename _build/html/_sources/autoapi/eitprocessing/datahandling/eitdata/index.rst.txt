:py:mod:`eitprocessing.datahandling.eitdata`
============================================

.. py:module:: eitprocessing.datahandling.eitdata


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   eitprocessing.datahandling.eitdata.EITData
   eitprocessing.datahandling.eitdata.Vendor




Attributes
~~~~~~~~~~

.. autoapisummary::

   eitprocessing.datahandling.eitdata.T


.. py:data:: T

   

.. py:class:: EITData

   Bases: :py:obj:`eitprocessing.datahandling.mixins.slicing.SelectByTime`, :py:obj:`eitprocessing.datahandling.mixins.equality.Equivalence`

   Container for EIT impedance data.

   This class holds the pixel impedance from an EIT measurement, as well as metadata describing the measurement. The
   class is meant to hold data from (part of) a singular continuous measurement.

   This class can't be initialized directly. Instead, use `load_eit_data(<path>, vendor=<vendor>)` to load data from
   disk.

   :param path: The path of list of paths of the source from which data was derived.
   :param nframes: Number of frames.
   :param time: The time of each frame (since start measurement).
   :param framerate: The (average) rate at which the frames are collection, in Hz.
   :param vendor: The vendor of the device the data was collected with.
   :param label: Computer readable label identifying this dataset.
   :param name: Human readable name for the data.
   :param pixel_impedance: Impedance values for each pixel at each frame.

   .. py:attribute:: path
      :type: str | Path | list[Path | str]

      

   .. py:attribute:: nframes
      :type: int

      

   .. py:attribute:: time
      :type: numpy.ndarray

      

   .. py:attribute:: framerate
      :type: float

      

   .. py:attribute:: vendor
      :type: Vendor

      

   .. py:attribute:: label
      :type: str | None

      

   .. py:attribute:: name
      :type: str | None

      

   .. py:attribute:: pixel_impedance
      :type: numpy.ndarray

      

   .. py:method:: __post_init__()


   .. py:method:: ensure_path_list(path: str | Path | list[str | Path]) -> list[pathlib.Path]
      :staticmethod:

      Return the path or paths as a list.

      The path of any EITData object can be a single str/Path or a list of str/Path objects. This method returns a
      list of Path objects given either a str/Path or list of str/Paths.


   .. py:method:: __add__(other: T) -> T


   .. py:method:: concatenate(other: T, newlabel: str | None = None) -> T


   .. py:method:: _sliced_copy(start_index: int, end_index: int, newlabel: str) -> typing_extensions.Self

      Slicing method that must be implemented by all subclasses.

      Must return a copy of self object with all attached data within selected
      indices.


   .. py:method:: __len__()


   .. py:method:: calculate_global_impedance() -> numpy.ndarray

      Return the global impedance, i.e. the sum of all included pixels at each frame.



.. py:class:: Vendor

   Bases: :py:obj:`strenum.LowercaseStrEnum`

   Enum indicating the vendor (manufacturer) of the source EIT device.

   .. py:attribute:: DRAEGER

      

   .. py:attribute:: TIMPEL

      

   .. py:attribute:: SENTEC

      

   .. py:attribute:: DRAGER

      

   .. py:attribute:: DRÃ„GER

      


