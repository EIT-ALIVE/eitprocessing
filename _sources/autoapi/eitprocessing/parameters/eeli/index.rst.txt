:py:mod:`eitprocessing.parameters.eeli`
=======================================

.. py:module:: eitprocessing.parameters.eeli


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   eitprocessing.parameters.eeli.EELI




.. py:class:: EELI(regions: list[numpy.typing.NDArray] | None = None, detect_breaths_method: str = 'Extreme values', summary_stats: dict[str, Callable[[numpy.typing.NDArray], float]] = {'per breath': lambda x: x, 'mean': np.mean, 'standard deviation': np.std, 'median': np.median})


   Bases: :py:obj:`eitprocessing.parameters.ParameterExtraction`

   .. py:method:: compute_parameter(sequence, frameset_name: str) -> dict | list[dict]

      Computes the end-expiratory lung impedance (EELI) per breath in the
      global impedance.



