:py:mod:`eitprocessing.eit_data.timpel`
=======================================

.. py:module:: eitprocessing.eit_data.timpel


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   eitprocessing.eit_data.timpel.TimpelEITData




.. py:class:: TimpelEITData


   Bases: :py:obj:`eitprocessing.eit_data.EITData_`

   Adds slicing functionality to subclass by implementing `__getitem__`.

   Subclasses must implement a `_sliced_copy` function that defines what should
   happen when the object is sliced. This class ensures that when calling a
   slice between square brackets (as e.g. done for lists) then return the
   expected sliced object.

   .. py:attribute:: framerate
      :type: float
      :value: 50

      

   .. py:attribute:: vendor
      :type: eitprocessing.eit_data.vendor.Vendor

      

   .. py:attribute:: variants
      :type: eitprocessing.variants.variant_collection.VariantCollection

      

   .. py:method:: _from_path(path: pathlib.Path, label: str | None = None, framerate: float | None = 20, first_frame: int = 0, max_frames: int | None = None, return_non_eit_data: bool = False) -> typing_extensions.Self | tuple[typing_extensions.Self, eitprocessing.continuous_data.continuous_data_collection.ContinuousDataCollection, eitprocessing.sparse_data.sparse_data_collection.SparseDataCollection]
      :classmethod:



