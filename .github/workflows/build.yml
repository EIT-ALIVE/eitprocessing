name: Python package

on:
  push:
    branches:
    - main
    - drcandacemakedamoore/docker
  pull_request:
    branches:
    - main

jobs:

  build:
    name: Build for (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.10', '3.11']
    steps:
      - uses: actions/checkout@v3
      - name: Connect to Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: drcandacemakedamoore
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Tests in Container 
        run: >
          docker run
          --rm
          -v ${{ github.workspace }}:/ci
          -e EIT_PROCESSING_TEST_DATA=/eitprocessing
          ghcr.io/eit-alive/eittestdata:latest
          sh -c 'set -xe ;
            cd /ci ;
            python -m pip install ".[dev,publishing]" ; 
            pytest -v ; 
            python setup.py sdist bdist_wheel'

  lint:
    name: Linting build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Python info
        shell: bash -l {0}
        run: |
          which python3
          python3 --version
      - name: Upgrade pip and install dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install .[dev,publishing]
      - name: Check style against standards using prospector
        run: prospector
      - name: Check import order
        run: isort --check-only eitprocessing --diff

  coveralls:
    name: Coveralls build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Python info
        shell: bash -l {0}
        run: |
          which python3
          python3 --version
      - name: Upgrade pip and install dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install .[dev,publishing]
      - name: Run unit tests with coverage
        run: pytest --cov --cov-append --cov-report xml --cov-report term --cov-report html
      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
          COVERALLS_FLAG_NAME: python-${{ matrix.version }}
        run: |
          coveralls --service=github